/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Character({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/Character.gltf");
  const { actions } = useAnimations(animations, group);
  const [hello, sethello] = useState(false);

  function onClick() {
    sethello((val) => !val);
  }
  function delay(time) {
    return new Promise((resolve) => setTimeout(resolve, time));
  }

  async function WalkAndHello() {
    actions.Walk.play();
    await delay(6000);
    actions.Walk.fadeOut(3);
    actions.Wave.play();
  }
  useEffect(() => {
    console.log(actions);
    actions.Yes.play();
    return () => {
      actions.Yes.fadeOut(3);
      actions.Wave.play();
    };
  }, [hello]);

  return (
    <group ref={group} {...props} dispose={null} onClick={onClick} scale={1}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Arms">
            <skinnedMesh
              name="CUBezierCurve000"
              geometry={nodes.CUBezierCurve000.geometry}
              material={materials.Main}
              skeleton={nodes.CUBezierCurve000.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve000_1"
              geometry={nodes.CUBezierCurve000_1.geometry}
              material={materials.Main_Light}
              skeleton={nodes.CUBezierCurve000_1.skeleton}
            />
          </group>
          <group name="Body_1">
            <skinnedMesh
              name="CUBezierCurve002"
              geometry={nodes.CUBezierCurve002.geometry}
              material={materials.Main}
              skeleton={nodes.CUBezierCurve002.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve002_1"
              geometry={nodes.CUBezierCurve002_1.geometry}
              material={materials.Main_Light}
              skeleton={nodes.CUBezierCurve002_1.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve002_2"
              geometry={nodes.CUBezierCurve002_2.geometry}
              material={materials.Main2}
              skeleton={nodes.CUBezierCurve002_2.skeleton}
            />
          </group>
          <skinnedMesh
            name="Ears"
            geometry={nodes.Ears.geometry}
            material={materials.Main}
            skeleton={nodes.Ears.skeleton}
          />
          <group name="Head_1">
            <skinnedMesh
              name="CUBezierCurve003"
              geometry={nodes.CUBezierCurve003.geometry}
              material={materials.Main}
              skeleton={nodes.CUBezierCurve003.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve003_1"
              geometry={nodes.CUBezierCurve003_1.geometry}
              material={materials.Black}
              skeleton={nodes.CUBezierCurve003_1.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve003_2"
              geometry={nodes.CUBezierCurve003_2.geometry}
              material={materials.Main_Light}
              skeleton={nodes.CUBezierCurve003_2.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve003_3"
              geometry={nodes.CUBezierCurve003_3.geometry}
              material={materials.White}
              skeleton={nodes.CUBezierCurve003_3.skeleton}
            />
            <skinnedMesh
              name="CUBezierCurve003_4"
              geometry={nodes.CUBezierCurve003_4.geometry}
              material={materials.EyeColor}
              skeleton={nodes.CUBezierCurve003_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Character.gltf");
