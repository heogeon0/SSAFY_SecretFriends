/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

import axios from "axios";

import iot from "../../../apis/iot";

function Star({ setPosition, updateChat, chat, ...props }) {
  const group = useRef();
  useFrame(({ clock }) => {
    if (chat.isUsed !== true) {
      const a = clock.getElapsedTime();
      group.current.rotation.y = a;
    }
  });

  // onClick 이벤트를  chat에서 관리해서 프롭스로 주자

  const { nodes, materials } = useGLTF("/models/Star.gltf");
  const onClick = (id, c) => {
    console.log(c);
    axios.get(iot.tts(c)).then((res) => {
      console.log(res.data);
    });
    updateChat(id);
  };

  return (
    <>
      <group
        ref={group}
        {...props}
        dispose={null}
        position={[setPosition?.px, setPosition?.py, setPosition?.pz]}
        onClick={() => onClick(chat.answerID, chat.content)}
        scale={setPosition?.scale}
        rotation={[setPosition?.rx, setPosition?.ry, setPosition?.rz]}
      >
        <mesh geometry={nodes.Star.geometry} material={materials.Gold} />
      </group>
    </>
  );
}

useGLTF.preload("/models/Star.gltf");

export default React.memo(Star);
